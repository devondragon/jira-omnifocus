name: "Test Suite"

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  test:
    name: "Tests (Ruby ${{ matrix.ruby-version }} on ${{ matrix.os }})"
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        # macOS only - OmniFocus is Mac-exclusive
        os: [macos-latest]
        ruby-version: ['3.2', '3.3', '3.4']
        
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Ruby ${{ matrix.ruby-version }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: true

      - name: Install dependencies
        run: bundle install

      - name: Run security audit
        run: bundle exec bundler-audit --update

      - name: Run RSpec tests
        run: bundle exec rspec --format progress --format json --out tmp/rspec_results.json

      - name: Generate coverage report
        run: |
          echo "Coverage results:"
          if [ -f coverage/.resultset.json ]; then
            echo "Coverage data found, processing..."
          else
            echo "No coverage data found"
          fi

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-ruby-${{ matrix.ruby-version }}-${{ matrix.os }}
          path: |
            tmp/rspec_results.json
            coverage/

  # Separate job for code quality checks
  quality:
    name: "Code Quality"
    runs-on: macos-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.4'
          bundler-cache: true

      - name: Install dependencies
        run: bundle install

      - name: Run RuboCop
        run: bundle exec rubocop --format progress

      - name: Run RuboCop with JSON output for analysis
        run: bundle exec rubocop --format json --out tmp/rubocop_results.json
        continue-on-error: true

      - name: Upload RuboCop results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: rubocop-results
          path: tmp/rubocop_results.json

  # Integration test job (macOS only due to AppleScript dependencies)
  integration:
    name: "Integration Tests (macOS)"
    runs-on: macos-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.4'
          bundler-cache: true

      - name: Install dependencies
        run: bundle install

      - name: Run integration tests only
        run: bundle exec rspec spec/integration/ --format progress

      - name: Run unit tests with coverage
        run: bundle exec rspec spec/unit/ --format progress

      - name: Check coverage threshold
        run: |
          if [ -f coverage/.resultset.json ]; then
            echo "Checking coverage meets minimum threshold..."
            # The SimpleCov configuration will fail the build if under 90%
            echo "Coverage check completed via SimpleCov configuration"
          else
            echo "No coverage data generated"
            exit 1
          fi

  # Performance and smoke tests
  performance:
    name: "Performance Tests"
    runs-on: macos-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.4'
          bundler-cache: true

      - name: Install dependencies
        run: bundle install

      - name: Run performance benchmarks
        run: |
          echo "Running test suite performance benchmark..."
          time bundle exec rspec --format progress > /dev/null
          echo "Performance benchmark completed"

      - name: Test script execution
        run: |
          echo "Testing main script loads without errors..."
          bundle exec ruby -c bin/jiraomnifocus.rb
          echo "Script syntax validation passed"

  # Summary job that depends on all others
  test-summary:
    name: "Test Summary"
    runs-on: macos-latest
    needs: [test, quality, integration, performance]
    if: always()
    
    steps:
      - name: Check test results
        run: |
          echo "Test Summary:"
          echo "- Unit/Integration Tests: ${{ needs.test.result }}"
          echo "- Code Quality: ${{ needs.quality.result }}"
          echo "- Integration Tests: ${{ needs.integration.result }}"
          echo "- Performance Tests: ${{ needs.performance.result }}"
          
          if [[ "${{ needs.test.result }}" == "success" && 
                "${{ needs.quality.result }}" == "success" && 
                "${{ needs.integration.result }}" == "success" && 
                "${{ needs.performance.result }}" == "success" ]]; then
            echo "✅ All tests passed!"
            exit 0
          else
            echo "❌ Some tests failed"
            exit 1
          fi